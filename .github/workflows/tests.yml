name: Build and Test

on:
  push:
    branches: [master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]

jobs:
  flake8:
    name: Flake8
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python # Set Python version
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Flake8
      uses: julianwachholz/flake8-action@v1.1.0
      with:
        checkName: Flake8  # NOTE: this needs to be the same as the job name
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-test:
    name: Build and Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python # Set Python version
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: PyTest
      run: python -m pytest --doctest-modules --junitxml=pytest.xml --cov=com --cov-report=xml --cov-report=html

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Results (Python ${{ matrix.python-version }})
        path: pytest.xml

  publish-test-results:
    name: "Publish Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.3
        with:
          check_name: Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: artifacts/**/pytest.xml
